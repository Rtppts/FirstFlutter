package controller

import (
	"firstflutter/config"
	"firstflutter/entity"
	"net/http"
	"github.com/gin-gonic/gin"
	"gorm.io/gorm"
)


func AddLogin(c *gin.Context) {
	var loginData struct {
		Email    string `json:"username"`
		Password string `json:"password"`
	}

	db := config.DB()

	if err := c.ShouldBindJSON(&loginData); err != nil {
		c.JSON(http.StatusBadRequest, gin.H{"error": "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á"})
		return
	}

	var account entity.Account
	if err := db.Where("email = ?", loginData.Email).First(&account).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			c.JSON(http.StatusUnauthorized, gin.H{"error": "‡πÑ‡∏°‡πà‡∏°‡∏µ Email ‡∏ô‡∏µ‡πâ"})
			return
		}
		c.JSON(http.StatusInternalServerError, gin.H{"error": "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"})
		return
	}

	// üîπ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô (‡πÉ‡∏ä‡πâ config.CheckPasswordHash)
	if !config.CheckPasswordHash([]byte(loginData.Password), []byte(account.Password)) {
		c.JSON(http.StatusUnauthorized, gin.H{"error": "‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á"})
		return
	}
	c.JSON(http.StatusOK, gin.H{"message": "‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"})
}